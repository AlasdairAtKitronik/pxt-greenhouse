input.onButtonPressed(Button.A, function () {
    kitronik_smart_greenhouse.sendAllData()
})
kitronik_smart_greenhouse.onAlarmTrigger(function () {
    music.playMelody("B F G - C5 E D G ", 120)
})
input.onButtonPressed(Button.AB, function () {
    kitronik_smart_greenhouse.simpleAlarmOff()
})
input.onButtonPressed(Button.B, function () {
    kitronik_smart_greenhouse.clearData()
})
kitronik_smart_greenhouse.setBuzzerPin()
kitronik_smart_greenhouse.setTime(9, 52, 0)
kitronik_smart_greenhouse.setDate(10, 9, 20)
let zipLEDs = kitronik_smart_greenhouse.createGreenhouseZIPDisplay(8)
let statusLEDs = zipLEDs.statusLedsRange()
let zipStick = zipLEDs.zipStickRange()
zipLEDs.setBrightness(128)
kitronik_smart_greenhouse.simpleAlarmSet(kitronik_smart_greenhouse.AlarmType.Single, 10, 30, kitronik_smart_greenhouse.AlarmSilence.userSilence)
kitronik_smart_greenhouse.setDataForUSB()
kitronik_smart_greenhouse.selectSeparator(kitronik_smart_greenhouse.Separator.semicolon)
kitronik_smart_greenhouse.optionSendEntryNumber(kitronik_smart_greenhouse.ListNumber.DontSend)
kitronik_smart_greenhouse.addTitle("Date", "Time", "Temp", "Humidity", "Soil")
basic.forever(function () {
    basic.showString(kitronik_smart_greenhouse.readDate())
    basic.showString(kitronik_smart_greenhouse.readTime())
    statusLEDs.showColor(kitronik_smart_greenhouse.colors(ZipLedColors.Green))
    zipStick.showColor(kitronik_smart_greenhouse.colors(ZipLedColors.White))
    basic.pause(1000)
    statusLEDs.showColor(kitronik_smart_greenhouse.colors(ZipLedColors.Violet))
    zipStick.showColor(kitronik_smart_greenhouse.colors(ZipLedColors.Red))
    basic.pause(1000)
    zipLEDs.clear()
    zipLEDs.show()
    basic.showString("P:")
    basic.showNumber(kitronik_smart_greenhouse.pressure(PressureUnitList.Pa))
    kitronik_smart_greenhouse.addData(kitronik_smart_greenhouse.readDate(), kitronik_smart_greenhouse.readTime(), convertToText(kitronik_smart_greenhouse.temperature(TemperatureUnitList.C)), convertToText(kitronik_smart_greenhouse.humidity()), convertToText(kitronik_smart_greenhouse.readIOPin(kitronik_smart_greenhouse.PinType.analog, kitronik_smart_greenhouse.IOPins.p1)))
    kitronik_smart_greenhouse.digitalWriteIOPin(kitronik_smart_greenhouse.IOPins.p0, 1)
    kitronik_smart_greenhouse.analogWriteIOPin(kitronik_smart_greenhouse.IOPins.p2, 429)
    kitronik_smart_greenhouse.controlHighPowerPin(kitronik_smart_greenhouse.HighPowerPins.pin13, kitronik_smart_greenhouse.onOff(true))
    kitronik_smart_greenhouse.controlHighPowerPin(kitronik_smart_greenhouse.HighPowerPins.pin14, kitronik_smart_greenhouse.onOff(true), 50)
    kitronik_smart_greenhouse.servoWrite(0)
    basic.pause(1000)
    kitronik_smart_greenhouse.controlHighPowerPin(kitronik_smart_greenhouse.HighPowerPins.pin13, kitronik_smart_greenhouse.onOff(false))
    kitronik_smart_greenhouse.controlHighPowerPin(kitronik_smart_greenhouse.HighPowerPins.pin14, kitronik_smart_greenhouse.onOff(false))
    kitronik_smart_greenhouse.servoWrite(90)
})
